plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def loadSigningConfigs(keyPath, initSigningConfig = null) {
    if(!keyPath)
        throw new RuntimeException("Please set key path")

    def signingConfig = initSigningConfig ? initSigningConfig : android.signingConfigs.release

    Properties props = new Properties()
    def propFile = file(keyPath)
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
                props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
            def storeFile = file(props['RELEASE_STORE_FILE'])
            if(storeFile.canRead()){ //absolute
                signingConfig.storeFile = storeFile
            } else { // abstract
                signingConfig.storeFile = file(propFile.parent + "/" + props['RELEASE_STORE_FILE'])
            }
            signingConfig.storePassword = props['RELEASE_STORE_PASSWORD']
            signingConfig.keyAlias = props['RELEASE_KEY_ALIAS']
            signingConfig.keyPassword = props['RELEASE_KEY_PASSWORD']
        }
    }
    return signingConfig
}

android {
    namespace "com.example.androidposlinkdemo"
    compileSdk 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.androidposlinkdemo"
        minSdk 23
        targetSdk 34
        versionCode 400
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
        }
    }

    buildTypes {
        debug{
            minifyEnabled true
            shrinkResources true
            signingConfig loadSigningConfigs('../signing.properties', signingConfigs.release)
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.paxus.pay:poslink-entry:1.50.1.0-SNAPSHOT'
    implementation 'io.r2:simple-pem-keystore:0.1D'
}
